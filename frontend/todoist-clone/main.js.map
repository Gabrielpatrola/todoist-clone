{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authorization/services/auth.guard.ts","./src/app/authorization/services/auth.service.ts","./src/app/home/components/create-task/create-task.component.ts","./src/app/home/components/create-task/create-task.component.html","./src/app/home/components/task/task.component.ts","./src/app/home/components/task/task.component.html","./src/app/home/pages/home-page/home-page.component.ts","./src/app/home/pages/home-page/home-page.component.html","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/components/main-layout/main-layout.component.ts","./src/app/shared/components/main-layout/main-layout.component.html","./src/app/shared/components/search/search.component.ts","./src/app/shared/components/search/search.component.html","./src/app/shared/components/sidebar/sidebar.component.ts","./src/app/shared/components/sidebar/sidebar.component.html","./src/app/shared/modules/material.module.ts","./src/app/shared/modules/shared.module.ts","./src/app/shared/pipes/filter.pipe.ts","./src/app/shared/pipes/search.pipe.ts","./src/app/shared/services/search/search.service.ts","./src/app/shared/services/sidebar/sidebar.service.ts","./src/app/shared/services/tasks/tasks.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\nimport { MainLayoutComponent } from './shared/components/main-layout/main-layout.component';\nimport { HomePageComponent } from './home/pages/home-page/home-page.component';\n\nimport { AuthGuard } from './authorization/services/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainLayoutComponent,\n    children: [\n      { path: '', redirectTo: '/', pathMatch: 'full' },\n      { path: '', component: HomePageComponent, canActivate: [AuthGuard] }\n    ],\n  },\n  {\n    path: 'authorization',\n    loadChildren: () =>\n      import('./authorization/authorization.module').then(\n        (m) => m.AuthorizationModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { MaterialModule } from './shared/modules/material.module';\nimport { SharedModule } from './shared/modules/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { MainLayoutComponent } from './shared/components/main-layout/main-layout.component';\nimport { HomePageComponent } from './home/pages/home-page/home-page.component';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { SidebarComponent } from './shared/components/sidebar/sidebar.component';\nimport { TaskComponent } from './home/components/task/task.component';\nimport { CreateTaskComponent } from './home/components/create-task/create-task.component';\nimport { SearchComponent } from './shared/components/search/search.component';\n\nimport { SearchPipe } from './shared/pipes/search.pipe';\nimport { FilterPipe } from './shared/pipes/filter.pipe';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainLayoutComponent,\n    HomePageComponent,\n    HeaderComponent,\n    SidebarComponent,\n    TaskComponent,\n    CreateTaskComponent,\n    SearchComponent,\n    SearchPipe,\n    FilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from \"rxjs\";\nimport { AuthService } from './auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {}\n\n    canActivate(\n        route: ActivatedRouteSnapshot, \n        state: RouterStateSnapshot\n        ): boolean | Observable<boolean> | Promise<boolean> {\n        if(this.authService.isAuthenticated()) {\n            return true;\n        } else {\n            this.authService.logout();\n            this.router.navigate(['/authorization']);\n        }\n    }\n    \n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { User, FbAuthResponse } from 'src/app/shared/interfaces';\nimport { Observable, throwError, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { tap, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  public error$: Subject<string> = new Subject<string>();\n\n  constructor(private http: HttpClient) {}\n\n  public get token(): string | null {\n    const expDate = new Date(localStorage.getItem('fb-token-exp'));\n    if (new Date() > expDate) {\n      this.logout();\n      return null;\n    }\n    return localStorage.getItem('fb-token');\n  }\n\n  public login(user: User): Observable<any> {\n    user.returnSecureToken = true;\n    return this.http\n      .post(\n        `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.apiKey}`,\n        user\n      )\n      .pipe(\n        tap(this.setToken), \n        catchError(this.handleError.bind(this))\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    const { message } = error.error.error;\n    switch (message) {\n      case 'INVALID_EMAIL':\n        this.error$.next('Incorrect email');\n        break;\n      case 'INVALID_PASSWORD':\n        this.error$.next('Incorrect password');\n        break;\n      case 'EMAIL_NOT_FOUND':\n        this.error$.next('Email not found');\n        break;\n    }\n    return throwError(error);\n  }\n\n  public logout(): void {\n    this.setToken(null);\n  }\n\n  public isAuthenticated(): boolean {\n    return !!this.token;\n  }\n\n  private setToken(response: FbAuthResponse | null): void {\n    if (response) {\n      const expDate = new Date(\n        new Date().getTime() + +response.expiresIn * 1000\n      );\n      localStorage.setItem('fb-token', response.idToken);\n      localStorage.setItem('fb-token-exp', expDate.toString());\n    } else {\n      localStorage.clear();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl } from '@angular/forms';\nimport { Todo } from 'src/app/shared/interfaces';\nimport { TasksService } from 'src/app/shared/services/tasks/tasks.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.scss'],\n})\nexport class CreateTaskComponent implements OnInit {\n  public title: FormControl;\n  public submitted: boolean;\n\n  constructor(private tasksService: TasksService) {}\n\n  ngOnInit(): void {\n    this.submitted = false;\n    this.title = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(512),\n    ]);\n  }\n\n  public onSave(): void {\n    if (this.title.invalid) {\n      return;\n    }\n\n    this.submitted = true;\n    const todo: Todo = {\n      userId: 1,\n      title: this.title.value,\n      completed: false,\n    };\n\n    this.tasksService.create(todo).subscribe(\n      () => {\n        this.title.reset();\n        this.submitted = false;\n      },\n      () => {\n        this.submitted = false;\n      }\n    );\n  }\n\n  public onCancel(): void {\n    this.title.reset();\n    this.submitted = false;\n  }\n}\n","<mat-card class=\"create\">\n  <mat-card-title>New to-do</mat-card-title>\n  <mat-card-content class=\"create__content\">\n    <mat-form-field class=\"create__field\" appearance=\"standard\">\n      <mat-label>To-do</mat-label>\n      <textarea \n        class=\"create__input\" \n        matInput \n        cdkTextareaAutosize\n        cdkAutosizeMinRows=\"1\"\n        cdkAutosizeMaxRows=\"6\"\n        [formControl]=\"title\" \n        placeholder=\"Go to the grocery shop\" ></textarea>\n      <mat-error *ngIf=\"title.hasError('required')\">\n        Text is <strong>required</strong>\n      </mat-error>\n      <mat-error *ngIf=\"title.hasError('maxlength')\">\n        Text length should be less than 512 characters.\n      </mat-error>\n    </mat-form-field>\n  </mat-card-content>\n  <mat-card-actions class=\"create__actions\">\n    <button \n      class=\"create__button\" mat-raised-button color=\"accent\" \n      [disabled]=\"!title.valid || submitted\" (click)=\"onSave()\">\n      <mat-icon>save</mat-icon>Save</button>\n    <button \n      class=\"create__button\" mat-raised-button color=\"accent\"\n      (click)=\"onCancel()\"\n      ><mat-icon>cancel</mat-icon>Cancel</button>\n  </mat-card-actions>\n</mat-card>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { TasksService } from 'src/app/shared/services/tasks/tasks.service';\nimport { HomePageComponent } from '../../pages/home-page/home-page.component';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss']\n})\nexport class TaskComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  @Input() title: string;\n  @Input() completed: boolean;\n\n  public newTitle: FormControl;\n  public submitted: boolean;\n  public isChanging: boolean;\n  public deleted: boolean;\n  public checked: boolean;\n\n  public editSub: Subscription;\n  public checkSub: Subscription;\n\n  constructor(\n    private tasksService: TasksService,\n    private homePage: HomePageComponent\n    ) { }\n\n  ngOnInit(): void {\n    this.isChanging = false;\n    this.submitted = false;\n    this.deleted = false;\n    this.checked = false;\n    this.newTitle = new FormControl('', [\n      Validators.required,\n      Validators.maxLength(512),\n    ]);\n  }\n\n  ngOnDestroy(): void {\n    if(this.editSub) {\n      this.editSub.unsubscribe();\n    }\n    if(this.checkSub) {\n      this.checkSub.unsubscribe();\n    }\n  }\n\n  public onSave(): void {\n    if (this.newTitle.invalid) {\n      return;\n    }\n    this.submitted = true;\n\n    this.editSub = this.tasksService.edit(this.id, this.newTitle.value).subscribe(\n      () => {\n        this.title = this.newTitle.value;\n        this.newTitle.reset();\n        this.submitted = false;\n        this.isChanging = false;\n      },\n      () => {\n        this.submitted = false;\n      }\n    );\n  }\n\n  public onCancel(): void {\n    this.newTitle.reset();\n    this.submitted = false;\n    this.isChanging = false;\n  }\n\n  public remove(): void {\n    this.deleted = true;\n    this.homePage.remove(this.id);\n  }\n\n  public edit(): void {\n    this.isChanging = true;\n  }\n  \n  public check(): void {\n    this.checked = true;\n    this.editSub = this.tasksService.check(this.id, !this.completed).subscribe(\n      () => {\n        this.completed = !this.completed;\n        this.checked = false;\n      },\n      () => {\n        this.checked = false;\n      }\n    );\n  }\n\n}\n","<mat-card class=\"task\">\n  <div class=\"task__ready\">\n    <mat-checkbox class=\"task__checkbox\" [(ngModel)]='completed' (click)=\"check()\" [disabled]=\"isChanging || checked\">Done</mat-checkbox>\n    <mat-divider [vertical]=\"true\" class=\"task__divider\"></mat-divider>\n    <mat-card-content class=\"task__content\">\n      <p>{{title}}</p>\n    </mat-card-content>\n    <mat-card-actions class=\"task__actions\">\n      <button mat-icon-button [disabled]=\"isChanging\" (click)=\"edit()\">\n          <mat-icon>edit</mat-icon>\n      </button>\n      <button mat-icon-button [disabled]=\"isChanging || deleted\" (click)=\"remove()\">\n          <mat-icon>delete</mat-icon>\n      </button>\n    </mat-card-actions>\n  </div>\n  <div class=\"task__change\" *ngIf=\"isChanging\">\n    <mat-form-field class=\"task__field\" appearance=\"standard\">\n      <mat-label>To-do</mat-label>\n      <textarea \n        class=\"task__input\" \n        matInput \n        cdkTextareaAutosize\n        cdkAutosizeMinRows=\"1\"\n        cdkAutosizeMaxRows=\"6\"\n        [formControl]=\"newTitle\" \n        placeholder=\"Go to the grocery shop\"></textarea>\n      <mat-error *ngIf=\"newTitle.hasError('required')\">\n        Text is <strong>required</strong>\n      </mat-error>\n      <mat-error *ngIf=\"newTitle.hasError('maxlength')\">\n        Text length should be less than 512 characters.\n      </mat-error>\n    </mat-form-field>\n    <div class=\"task__actions\">\n      <button \n        class=\"task__button\" mat-raised-button color=\"accent\" \n        [disabled]=\"!newTitle.valid || submitted\" (click)=\"onSave()\">\n        <mat-icon>save</mat-icon>Save</button>\n      <button \n        class=\"task__button\" mat-raised-button color=\"accent\"\n        (click)=\"onCancel()\"\n        ><mat-icon>cancel</mat-icon>Cancel</button>\n    </div>\n  </div>\n</mat-card>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { TasksService } from 'src/app/shared/services/tasks/tasks.service';\nimport { Todo, Completed } from 'src/app/shared/interfaces';\nimport { Subscription } from 'rxjs';\nimport { SearchService } from 'src/app/shared/services/search/search.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss'],\n})\nexport class HomePageComponent implements OnInit, OnDestroy {\n  public todos: Todo[] = [];\n  private tasksSub: Subscription;\n  private deleteSub: Subscription;\n  private searchSub: Subscription;\n  private filterSub: Subscription;\n  public searchStr: string;\n  public done: Completed;\n\n  constructor(\n    private tasksService: TasksService,\n    private searchService: SearchService\n  ) {\n    this.searchSub = this.searchService.getSearch()\n    .subscribe((search) => {\n      this.searchStr = search;\n    });\n    this.filterSub = this.searchService.getCompleted()\n    .subscribe((completed) => {\n      this.done = completed;\n    });\n   }\n\n  ngOnInit(): void {\n    this.tasksSub = this.tasksService.getAll().subscribe((todos) => {\n      this.todos = todos;\n    });\n  }\n\n  public remove(id: number): void {\n    this.deleteSub = this.tasksService.remove(id).subscribe(() => {\n      this.todos = this.todos.filter((todo) => todo.id !== id);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.tasksSub) {\n      this.tasksSub.unsubscribe();\n    }\n    if (this.deleteSub) {\n      this.deleteSub.unsubscribe();\n    }\n    if (this.searchSub) {\n      this.searchSub.unsubscribe();\n    }\n    if (this.filterSub) {\n      this.filterSub.unsubscribe();\n    }\n  }\n}\n","<div class=\"toolbar\">\n    <app-search></app-search>\n    <app-create-task></app-create-task>\n</div>\n<ul class=\"todos\" *ngIf=\"todos.length; else loading\">\n    <li *ngFor=\"let todo of todos | filterTodos:done | searchTodos:searchStr\" class=\"todos__item\">\n        <app-task [id]=\"todo.id\" [title]=\"todo.title\" [completed]=\"todo.completed\"></app-task>\n    </li>\n</ul>\n\n<ng-template #loading>\n    <mat-progress-spinner\n        class=\"spinner\"\n        color=\"accent\"\n        mode=\"indeterminate\">\n    </mat-progress-spinner>\n</ng-template>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'src/app/authorization/services/auth.service';\nimport { SidebarService } from '../../services/sidebar/sidebar.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  constructor(\n    private authService: AuthService,\n    private sidebarService: SidebarService,\n    private router: Router\n    ) { }\n\n  public toggleSidebar(): void {\n    this.sidebarService.toggle();\n  }\n\n  public logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/authorization']);\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"header\">\n    <mat-toolbar-row class=\"header__row\">\n        <button mat-icon-button (click)=\"toggleSidebar()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n\n        <button mat-button class=\"header__logout\" (click)=\"logout()\">\n          <mat-icon class=\"header__icon\">exit_to_app</mat-icon>\n          Log out\n        </button>\n    </mat-toolbar-row>\n  </mat-toolbar>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\nexport class MainLayoutComponent {}\n","<app-header></app-header>\n<app-sidebar></app-sidebar>","import { Component, OnInit } from '@angular/core';\nimport { SearchService } from '../../services/search/search.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  public searchStr: string;\n\n  constructor(private searchService: SearchService) { }\n\n  ngOnInit(): void {\n    this.searchStr = \"\";\n    this.searchService.updateSearch(this.searchStr);\n  }\n\n  public search() {\n    this.searchService.updateSearch(this.searchStr);\n  }\n\n}\n","<mat-card class=\"search\">\n  <mat-form-field class=\"search__field\">\n    <input \n      class=\"header__input\" \n      matInput type=\"text\" \n      placeholder=\"Search...\" \n      [(ngModel)]=\"searchStr\"\n      (change)=\"search()\">\n    <button \n      mat-icon-button \n      mat-button \n      *ngIf=\"searchStr\" \n      matSuffix (click)=\"searchStr=''\"\n    ><mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n  <button mat-mini-fab color=\"accent\" (click)=\"search()\"><mat-icon>search</mat-icon></button>\n</mat-card>","import { Component, ViewChild, AfterViewInit, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { SidebarService } from '../../services/sidebar/sidebar.service';\nimport { SearchService } from '../../services/search/search.service';\nimport { Completed } from '../../interfaces';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements AfterViewInit, OnInit { \n   @ViewChild('sidebar') public sidebar: MatSidenav;\n\n   public done: boolean;\n   public notdone: boolean;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private sidebarService: SidebarService,\n    private searchService: SearchService\n  ) {}\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  ngOnInit(): void {\n    this.done = true;\n    this.notdone = true;\n\n    const completed: Completed = {\n      done: this.done,\n      notdone: this.notdone\n    }\n    this.searchService.updateCompleted(completed);\n  }\n\n  ngAfterViewInit(): void {\n    this.sidebarService.setSidebar(this.sidebar);\n  }\n\n  public filter(): void {\n    const completed: Completed = {\n      done: this.done,\n      notdone: this.notdone\n    }\n    this.searchService.updateCompleted(completed);\n  }\n}\n","<mat-sidenav-container class=\"sidebar\">\n  <mat-sidenav #sidebar class=\"sidebar__sidenav\" [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\">\n    <mat-list>\n      <h2 matSubheader>Filter by completed</h2>\n      <mat-list-item>\n        <mat-checkbox [(ngModel)]=\"done\" (change)=\"filter()\">Done</mat-checkbox>\n      </mat-list-item>\n      <mat-list-item>\n        <mat-checkbox [(ngModel)]=\"notdone\" (change)=\"filter()\">Not done</mat-checkbox>\n      </mat-list-item>\n    </mat-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content class=\"sidebar__content\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\n\nimport { LayoutModule } from '@angular/cdk/layout';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst modules: any[] = [\n  LayoutModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatButtonModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatSidenavModule,\n  MatDividerModule,\n  MatListModule,\n  MatCheckboxModule,\n  MatCardModule,\n  MatProgressSpinnerModule\n];\n\n@NgModule({\n  imports: [ ...modules ],\n  exports: [ ...modules ]\n})\nexport class MaterialModule {}","import { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n    imports: [HttpClientModule],\n    exports: [HttpClientModule]\n})\nexport class SharedModule {}","import { Pipe, PipeTransform } from '@angular/core';\nimport { Todo, Completed } from '../interfaces';\n\n@Pipe({\n  name: 'filterTodos',\n})\nexport class FilterPipe implements PipeTransform {\n  transform(todos: Todo[], completed: Completed): Todo[] {\n    return todos.filter((todo) => {\n        if(completed.done && completed.notdone){\n            return todo;\n        }\n        if(completed.done) {\n            return todo.completed === true;\n        } else {\n            return todo.completed === false;\n        }\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Todo } from '../interfaces';\n\n@Pipe({\n  name: 'searchTodos',\n})\nexport class SearchPipe implements PipeTransform {\n  transform(todos: Todo[], search = ''): Todo[] {\n    if (!search.trim()) {\n      return todos;\n    }\n\n    return todos.filter((todo) => {\n      return todo.title.toLowerCase().includes(search.toLowerCase());\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { Completed } from '../../interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  private search = new Subject<string>();\n  private completed = new Subject<Completed>();\n\n  public getSearch(): Observable<string> {\n    return this.search.asObservable();\n  }\n\n  public updateSearch(search: string): void {\n    this.search.next(search);\n  }\n\n  public getCompleted(): Observable<Completed> {\n    return this.completed.asObservable();\n  }\n\n  public updateCompleted(completed: Completed): void {\n    this.completed.next(completed);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidebarService {\n  private sidebar: MatSidenav;\n  // constructor() { }\n\n  public setSidebar(sidebar: MatSidenav) {\n    this.sidebar = sidebar;\n  }\n\n  public open() {\n    return this.sidebar.open();\n  }\n\n  public close() {\n    return this.sidebar.close();\n  }\n\n  public toggle(): void {\n    this.sidebar.toggle();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Todo } from '../../interfaces';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TasksService {\n  private URL_JPH = 'https://jsonplaceholder.typicode.com/todos';\n  public todo: Todo;\n  constructor(private http: HttpClient) {}\n\n  public create(todo: Todo): Observable<Todo> {\n    const httpHeader = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    return this.http.post<Todo>(\n        this.URL_JPH,\n        JSON.stringify(todo),\n        { headers: httpHeader }\n      ).pipe(map((response) => {return response;}));\n  }\n\n  public getAll(): Observable<Todo[]> {\n    return this.http.get(this.URL_JPH)\n      .pipe(map((response: Todo[]) => response));\n  }\n\n  public remove(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.URL_JPH}/${id}`);\n  } \n\n  public edit(id: number, title: string): Observable<Todo> {\n    const httpHeader = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.patch<Todo>(\n      `${this.URL_JPH}/${id}`, \n      JSON.stringify({title}), \n      { headers: httpHeader } )\n      .pipe(map((response) => {return response;}));\n  }\n\n  public check(id: number, completed: boolean): Observable<Todo> {\n    const httpHeader = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.patch<Todo>(\n      `${this.URL_JPH}/${id}`, \n      JSON.stringify({completed}), \n      { headers: httpHeader } )\n      .pipe(map((response) => {return response;}));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { Environment } from './interface';\n\nexport const environment: Environment = {\n  production: false,\n  apiKey: 'AIzaSyCUtUM29Nq98XGeMf0NezjN-aruHF6gsyk'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}