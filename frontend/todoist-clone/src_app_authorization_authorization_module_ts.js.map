{"version":3,"file":"src_app_authorization_authorization_module_ts.js","mappings":"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","sources":["./src/app/authorization/authorization.module.ts","./src/app/authorization/components/auth-layout/auth-layout.component.ts","./src/app/authorization/components/auth-layout/auth-layout.component.html","./src/app/authorization/components/login-page/login-page.component.ts","./src/app/authorization/components/login-page/login-page.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from \"../shared/modules/material.module\";\nimport { SharedModule } from '../shared/modules/shared.module';\n\nimport { LoginPageComponent } from './components/login-page/login-page.component';\nimport { AuthLayoutComponent } from './components/auth-layout/auth-layout.component';\n\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './services/auth.guard';\n\n\n@NgModule({\n  declarations: [\n    LoginPageComponent, \n    AuthLayoutComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    SharedModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      {\n          path: '', component: AuthLayoutComponent , children: [\n              { path: '', redirectTo: '/authorization', pathMatch: 'full' },\n              { path: '', component: LoginPageComponent }\n          ]\n      }\n  ])],\n  exports: [RouterModule]\n})\nexport class AuthorizationModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.scss']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  Validators,\n  FormGroup,\n  FormControl\n} from '@angular/forms';\nimport { User } from 'src/app/shared/interfaces';\nimport { AuthService } from '../../services/auth.service';\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n})\nexport class LoginPageComponent implements OnInit {\n  public loginForm: FormGroup;\n  public submitted: boolean;\n\n  constructor(\n    private router: Router,\n    public authService: AuthService\n    ) {}\n\n  ngOnInit(): void {\n    this.submitted = false;\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]), \n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(32),\n      ])\n    });\n  }\n\n  public onSubmit(): void {\n    if(this.loginForm.invalid) {\n      return;\n    }\n\n    this.submitted = true;\n\n    const user: User = {\n      email: this.loginForm.value.email,\n      password: this.loginForm.value.password\n    }\n\n    this.authService.login(user).subscribe(()=>{\n      this.loginForm.reset(),\n      this.router.navigate(['/']),\n      this.submitted = false\n    }, ()=>this.submitted = false);\n  }\n}\n","<mat-card class=\"login__card\" color=\"primary\">\n  <mat-card-header class=\"login__header\">\n    <mat-card-title class=\"login__title\">Login</mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"login__content\">\n    <form [formGroup]=\"loginForm\" class=\"login__form\">\n      <mat-error *ngIf=\"authService.error$ | async as error\">{{error}}</mat-error>\n      <mat-form-field class=\"login__field\" appearance=\"standard\">\n        <mat-label>Email</mat-label>\n        <input \n          class=\"login__input\" \n          matInput \n          formControlName=\"email\" \n          placeholder=\"abc@xyz.com\" \n          name=\"email\">\n          <mat-hint>Enter: angular@love.com</mat-hint>\n        <mat-error *ngIf=\"loginForm.controls['email'].hasError('email')\">\n          Please enter a valid email address\n        </mat-error>\n        <mat-error *ngIf=\"loginForm.controls['email'].hasError('required')\">\n          Email is <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"login__field\" appearance=\"standard\">\n        <mat-label>Password</mat-label>\n        <input \n          class=\"login__input\" \n          matInput \n          formControlName=\"password\" \n          placeholder=\"password\" \n          type=\"password\"\n          name=\"password\">\n          <mat-hint>Enter: 12345678</mat-hint>\n        <mat-error *ngIf=\"loginForm.controls['password'].hasError('minlength') \n          || loginForm.controls['password'].hasError('maxlength')\">\n          Password length should be between 6 and 32 characters\n        </mat-error>\n        <mat-error *ngIf=\"loginForm.controls['password'].hasError('required')\">\n          Password is <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n    </form>\n  </mat-card-content>\n\n  <mat-card-actions class=\"login__button\">\n    <button mat-raised-button (click)=\"onSubmit()\" [disabled]=\"!loginForm.valid || submitted\" color=\"primary\">Login</button>\n  </mat-card-actions>\n\n</mat-card>"],"names":[],"sourceRoot":"webpack:///"}